---
- name: Deploy Go API with Nginx and Docker
  hosts: all
  become: yes
  vars:
    app_name: users-api
    app_port: 8080
    nginx_port: 80

  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Install required packages
      package:
        name:
          - nginx
          - docker.io
          - docker-compose
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Create app directory
      file:
        path: /opt/{{ app_name }}
        state: directory
        mode: '0755'

    - name: Copy application files
      copy:
        src: "{{ item }}"
        dest: /opt/{{ app_name }}/
      loop:
        - main.go
        - Dockerfile

    - name: Build Docker image
      docker_image:
        build:
          path: /opt/{{ app_name }}
        name: "{{ app_name }}"
        tag: latest
        source: build

    - name: Stop existing container if running
      docker_container:
        name: "{{ app_name }}"
        state: absent
      ignore_errors: yes

    - name: Run Docker container
      docker_container:
        name: "{{ app_name }}"
        image: "{{ app_name }}:latest"
        state: started
        restart_policy: always
        ports:
          - "{{ app_port }}:8080"

    - name: Configure Nginx
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/{{ app_name }}
      notify: restart nginx

    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link
      notify: restart nginx

    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      notify: restart nginx

    - name: Start and enable Nginx
      systemd:
        name: nginx
        state: started
        enabled: yes

  handlers:
    - name: restart nginx
      systemd:
        name: nginx
        state: restarted