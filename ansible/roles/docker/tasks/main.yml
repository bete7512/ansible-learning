# Docker installation and configuration
---
- name: Remove old Docker versions
  package:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  tags: [docker, cleanup]

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  when: ansible_os_family == "Debian"
  tags: [docker, repository]

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present
  when: ansible_os_family == "Debian"
  tags: [docker, repository]

- name: Update package cache after adding Docker repo
  apt:
    update_cache: yes
  when: ansible_os_family == "Debian"
  tags: [docker, packages]

- name: Install Docker CE
  package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  tags: [docker, packages]

- name: Start and enable Docker service
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes
  tags: [docker, service]

- name: Add users to docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users }}"
  tags: [docker, users]

- name: Install Docker Compose (standalone)
  get_url:
    url: "https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'
  tags: [docker, compose]

- name: Verify Docker installation
  command: docker --version
  register: docker_version
  changed_when: false
  tags: [docker, verification]

- name: Display Docker version
  debug:
    var: docker_version.stdout
  tags: [docker, verification]

- name: Configure Docker daemon
  template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: restart docker
  tags: [docker, configuration]