name: Deploy Go API with Ansible

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        # Debug: Check if secrets exist (without printing actual values)
        if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
          echo "ERROR: SSH_PRIVATE_KEY secret is empty!"
          exit 1
        fi
        if [ -z "${{ secrets.HOST }}" ]; then
          echo "ERROR: HOST secret is empty!"
          exit 1
        fi
        if [ -z "${{ secrets.USER }}" ]; then
          echo "ERROR: USER secret is empty!"
          exit 1
        fi
        
        # Setup SSH key with proper name expected by Ansible config
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        
        # Add host to known_hosts
        ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

    - name: Install Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible python3-pip
        pip3 install docker

    - name: Update Ansible inventory with current host
      run: |
        # Update the production inventory with current host from secrets
        sed -i "s/userapi ansible_host=.*/userapi ansible_host=${{ secrets.HOST }} ansible_user=${{ secrets.USER }}/" ansible/inventories/production/hosts

    - name: Prepare application files for Ansible
      run: |
        # Create the files directory that Ansible expects
        mkdir -p ansible/roles/golang-app/files
        # Copy application files to where Ansible can find them
        cp main.go Dockerfile go.mod ansible/roles/golang-app/files/

    - name: Test SSH connection
      run: |
        echo "Testing SSH connection..."
        ansible webservers -m ping -v

    - name: Run infrastructure setup
      run: |
        ansible-playbook ansible/playbooks/setup-infrastructure.yml -v

    - name: Deploy application
      run: |
        ansible-playbook ansible/playbooks/deploy-app.yml -v

    - name: Test deployment
      run: |
        sleep 30
        echo "Testing API endpoints..."
        curl -f http://${{ secrets.HOST }}/health
        curl -f http://${{ secrets.HOST }}/users
        echo "Deployment successful!"